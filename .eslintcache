[{"E:\\project\\ms-store\\src\\Components\\Checkout\\Subtotal.js":"1","E:\\project\\ms-store\\src\\index.js":"2","E:\\project\\ms-store\\src\\reducer.js":"3","E:\\project\\ms-store\\src\\Components\\Home\\index.js":"4","E:\\project\\ms-store\\src\\Components\\Home\\Product.js":"5","E:\\project\\ms-store\\src\\Components\\Header.js":"6","E:\\project\\ms-store\\src\\Components\\Checkout\\CheckoutProduct.js":"7","E:\\project\\ms-store\\src\\Components\\Checkout\\index.js":"8","E:\\project\\ms-store\\src\\Components\\Login\\index.js":"9","E:\\project\\ms-store\\src\\firebase.js":"10","E:\\project\\ms-store\\src\\App.js":"11","E:\\project\\ms-store\\src\\reportWebVitals.js":"12","E:\\project\\ms-store\\src\\StateProvider.js":"13","E:\\project\\ms-store\\src\\Components\\Payment\\index.js":"14","E:\\project\\ms-store\\src\\axios.js":"15","E:\\project\\ms-store\\src\\Components\\Orders\\index.js":"16","E:\\project\\ms-store\\src\\Components\\Orders\\Order.js":"17"},{"size":1077,"mtime":1606805953756,"results":"18","hashOfConfig":"19"},{"size":690,"mtime":1606677058837,"results":"20","hashOfConfig":"19"},{"size":2160,"mtime":1606934743832,"results":"21","hashOfConfig":"19"},{"size":2591,"mtime":1606721417336,"results":"22","hashOfConfig":"19"},{"size":1617,"mtime":1606761754343,"results":"23","hashOfConfig":"19"},{"size":2259,"mtime":1606994357615,"results":"24","hashOfConfig":"19"},{"size":1240,"mtime":1606995707770,"results":"25","hashOfConfig":"19"},{"size":1357,"mtime":1606766578653,"results":"26","hashOfConfig":"19"},{"size":2747,"mtime":1606763015566,"results":"27","hashOfConfig":"19"},{"size":592,"mtime":1606737357653,"results":"28","hashOfConfig":"19"},{"size":2472,"mtime":1606936211937,"results":"29","hashOfConfig":"19"},{"size":362,"mtime":1606380640945,"results":"30","hashOfConfig":"19"},{"size":507,"mtime":1606676131104,"results":"31","hashOfConfig":"19"},{"size":5405,"mtime":1606935995494,"results":"32","hashOfConfig":"19"},{"size":198,"mtime":1606825871080,"results":"33","hashOfConfig":"19"},{"size":1006,"mtime":1606991016992,"results":"34","hashOfConfig":"19"},{"size":1136,"mtime":1606995711892,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"1yo92y8",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\project\\ms-store\\src\\Components\\Checkout\\Subtotal.js",["78"],"import React from \"react\";\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { getBasketTotal } from \"../../reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Subtotal = () => {\r\n  const history = useHistory();\r\n  const [{ basket }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"subtotal\">\r\n      <CurrencyFormat\r\n        renderText={(value) => (\r\n          <>\r\n            <p>\r\n              Subtotal ({basket.length} items): <strong>{value}</strong>\r\n            </p>\r\n            <small className=\"subtotal__gift\">\r\n              <input type=\"checkbox\" /> This order contains a gift\r\n            </small>\r\n          </>\r\n        )}\r\n        decimalScale={2}\r\n        value={getBasketTotal(basket)}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n      <button onClick={(e) => history.push(\"/payment\")}>\r\n        Proceed to Checkout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subtotal;\r\n","E:\\project\\ms-store\\src\\index.js",[],["79","80"],"E:\\project\\ms-store\\src\\reducer.js",[],"E:\\project\\ms-store\\src\\Components\\Home\\index.js",[],"E:\\project\\ms-store\\src\\Components\\Home\\Product.js",["81"],"import React from \"react\";\r\nimport \"./Product.css\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nconst Product = ({ id, title, image, price, rating, alt }) => {\r\n  //state diubah menjadi {basket} yang diambil dari initialState di reducer.js\r\n  const [{ basket }, dispatch] = useStateValue();\r\n  // dispatch digunakan untuk memanipulasi data\r\n  // seperti pistol juga yang menembak data ke data layer\r\n\r\n  //mengecek isi basket yang akan diambil untuk icon basket di navbar\r\n  // console.log(\"this is the basket >>>\", basket);\r\n\r\n  const addToBasket = () => {\r\n    // dispatch the item to data layer (state provider)\r\n    dispatch({\r\n      type: \"ADD_TO_BASKET\", //kunci atau jalan patch yang digunakan\r\n      item: {\r\n        //id, title, image yg kanan diambil dari produk\r\n        //yang kiri inisial yang akan di buat di data layer dan akan diambil\r\n        id: id,\r\n        title: title,\r\n        image: image,\r\n        price: price,\r\n        rating: rating,\r\n        alt: alt,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__info\">\r\n        <p>{title}</p>\r\n        <p className=\"product__price\">\r\n          <small>$</small>\r\n          <strong>{price}</strong>\r\n        </p>\r\n        <div className=\"product__rating\">\r\n          {Array(rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <p>⭐</p>\r\n            ))}\r\n          {/* <p>⭐</p> */}\r\n        </div>\r\n      </div>\r\n      <img src={image} alt={alt} />\r\n\r\n      <button onClick={addToBasket}>Add to basket</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","E:\\project\\ms-store\\src\\Components\\Header.js",["82"],"E:\\project\\ms-store\\src\\Components\\Checkout\\CheckoutProduct.js",["83"],"E:\\project\\ms-store\\src\\Components\\Checkout\\index.js",["84"],"import React from \"react\";\r\nimport \"./Checkout.css\";\r\nimport AdImg from \"../../assets/images/ad.jpg\";\r\nimport Subtotal from \"./Subtotal\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nconst Checkout = () => {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  // console.log(\"basket checkout >>>\", basket);\r\n\r\n  return (\r\n    <div className=\"checkout\">\r\n      <div className=\"checkout__left\">\r\n        <img className=\"checkout__ad\" src={AdImg} alt=\"immg ad\" />\r\n        <div>\r\n          <h3 className=\"checkout__h3\">Hello, {user ? user.email : \"Guest\"}</h3>\r\n          <h2 className=\"checkout__title\">Your shopping Basket</h2>\r\n\r\n          {/* props nya udah di buat di Checkout product apa saja yang akan dimasukan\r\n          tapi kita mengambil isi produknya dari basket karena sama isinya seperti pada props\r\n          dan diambil dari home page, agar dinamis */}\r\n          {basket.map((item) => (\r\n            <CheckoutProduct\r\n              id={item.id}\r\n              title={item.title}\r\n              image={item.image}\r\n              price={item.price}\r\n              rating={item.rating}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"checkout__right\">\r\n        <Subtotal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","E:\\project\\ms-store\\src\\Components\\Login\\index.js",[],"E:\\project\\ms-store\\src\\firebase.js",[],"E:\\project\\ms-store\\src\\App.js",["85","86"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Home from './Components/Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Checkout from './Components/Checkout';\nimport Login from './Components/Login';\nimport { auth } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport Payment from './Components/Payment';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport Orders from './Components/Orders';\n\nconst promise = loadStripe(\n  'pk_test_51HtUqyKwRSWgW3TK14RkNGBxm5QVg32NfXkwBu2R1WcU7b7Tl8Wtskvs1Z7Es6Ou4diI7w7mZsYBYQyKxQACp9Fc00tbJh5Prf',\n);\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n  // {} diatas : objek kosong untuk mengambil user, jika tdk ada maka user tidak di push\n\n  //tracking everything about user >> like who is sign in\n  useEffect(() => {\n    // will only run once  when the app comonents load\n\n    // hanya refresh code ketika terjadi sign in user atau sign out\n    auth.onAuthStateChanged((authUser) => {\n      console.log('USER LOGED IN IS >>>', authUser);\n\n      if (authUser) {\n        // the user just logged in / was logged in (theres user log in)\n\n        //we push data user to data layer (context api)\n        dispatch({\n          type: 'SET_USER', //key to push user to data layeer\n          user: authUser, //user we get them from authUser\n        });\n      } else {\n        // the user is logged out\n\n        //we remove user ferom dataLayer if they're logged out (back to null)\n        dispatch({\n          type: 'SET_USER',\n          user: null,\n        });\n      }\n    });\n  }, []);\n  // jika tdk ada array kosong [] maka data layer akan bekerja terus mnerus dan browser crash\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\project\\ms-store\\src\\reportWebVitals.js",[],["87","88"],"E:\\project\\ms-store\\src\\StateProvider.js",[],"E:\\project\\ms-store\\src\\Components\\Payment\\index.js",["89"],"import React, { useState, useEffect } from 'react';\r\nimport { useStateValue } from '../../StateProvider';\r\nimport CheckoutProduct from '../Checkout/CheckoutProduct';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal } from '../../reducer';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport axios from '../../axios';\r\nimport './Payment.css';\r\nimport { db } from '../../firebase';\r\n\r\nconst Payment = () => {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  // use effect below, whenever the basket changes, it will make request and will update stripe secreet (paymentcode frfom stripe)\r\n  // which allow us to charge the custommers the correct amount\r\n  useEffect(() => {\r\n    //generate the special stripe secret which allows us to charge the customers\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: 'post',\r\n        //stripe expects the total in a currencies sub-units\r\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n\r\n    getClientSecret();\r\n  }, [basket]);\r\n\r\n  console.log('THE SECRET IS >>', clientSecret);\r\n\r\n  const handleSubmit = async (event) => {\r\n    // do all the fancy stripe stuff\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        // paymentIntent = payment confirmation\r\n\r\n        db.collection('users')\r\n          .doc(user?.uid)\r\n          .collection('orders')\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            basket: basket,\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          });\r\n\r\n        //if success or everything good\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n\r\n        dispatch({\r\n          type: 'EMPTY_BASKET',\r\n        });\r\n\r\n        // we don't wanna push here, so user sfer payment succeeded tey cant go back (replace that page-no history)\r\n        history.replace('/orders');\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // listen for change in the CardElements\r\n    // and display any errors as the custommer types tehir card details\r\n    // clientSecret is how the stripe knows how much to charge customer(client)\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.messages : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment__container\">\r\n        <h1>\r\n          Checkout (\r\n          <Link className=\"a__items\" to=\"/checkout\">\r\n            {basket?.length} items\r\n          </Link>\r\n          )\r\n        </h1>\r\n        {/* Delivery address - for now just hard code */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Delivery Adress</h3>\r\n          </div>\r\n          <div className=\"payment__address\">\r\n            <p>{user?.email}</p>\r\n            <p>123 React Street</p>\r\n            <p>Los Angeles, CA</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Review items */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Review item and delivery</h3>\r\n          </div>\r\n          <div className=\"payment__items\">\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n                alt={item.alt}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* payment */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment__details\">\r\n            {/* Stripe magic here */}\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n              <div className=\"payment__priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={'text'}\r\n                  thousandSeparator={true}\r\n                  prefix={'$'}\r\n                />\r\n                <button disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\r\n                </button>\r\n              </div>\r\n              {/* eroor mesages */}\r\n              {error && <div>{error}</div>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","E:\\project\\ms-store\\src\\axios.js",[],"E:\\project\\ms-store\\src\\Components\\Orders\\index.js",["90","91"],"import React, { useState, useEffect } from 'react';\r\nimport { db } from '../../firebase';\r\nimport { useStateValue } from '../../StateProvider';\r\nimport Order from './Order';\r\nimport './Orders.css';\r\n\r\nfunction Orders() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection('users')\r\n        .doc(user?.uid)\r\n        .collection('orders')\r\n        .orderBy('created', 'desc')\r\n        .onSnapshot((snapshot) =>\r\n          setOrders(\r\n            snapshot.docs.map((doc) => ({\r\n              id: doc.id,\r\n              data: doc.data(),\r\n            })),\r\n          ),\r\n        );\r\n    } else {\r\n      setOrders([]);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"orders\">\r\n      <h1>Your Orders</h1>\r\n\r\n      <div className=\"orders__order\">\r\n        {orders?.map((order) => (\r\n          <Order order={order} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","E:\\project\\ms-store\\src\\Components\\Orders\\Order.js",[],{"ruleId":"92","severity":1,"message":"93","line":10,"column":22,"nodeType":"94","messageId":"95","endLine":10,"endColumn":30},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":7,"column":12,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":11,"column":28,"nodeType":"94","messageId":"95","endLine":11,"endColumn":36},{"ruleId":"92","severity":1,"message":"100","line":15,"column":12,"nodeType":"94","messageId":"95","endLine":15,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":9,"column":28,"nodeType":"94","messageId":"95","endLine":9,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":20,"column":10,"nodeType":"103","messageId":"104","endLine":20,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":49,"column":6,"nodeType":"107","endLine":49,"endColumn":8,"suggestions":"108"},{"ruleId":"96","replacedBy":"109"},{"ruleId":"98","replacedBy":"110"},{"ruleId":"92","severity":1,"message":"111","line":48,"column":11,"nodeType":"94","messageId":"95","endLine":48,"endColumn":18},{"ruleId":"92","severity":1,"message":"100","line":8,"column":12,"nodeType":"94","messageId":"95","endLine":8,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":8,"column":28,"nodeType":"94","messageId":"95","endLine":8,"endColumn":36},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'basket' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["114"],["112"],["113"],"'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [dispatch]",{"range":"117","text":"118"},[1701,1703],"[dispatch]"]